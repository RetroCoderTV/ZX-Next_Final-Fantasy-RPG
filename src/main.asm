    org 0x8000

    DEVICE ZXSPECTRUMNEXT
	
start:
	call game_start	

	jp main_loop

main_loop:
	call game_update
	call game_draw

	jp main_loop

STACK_SIZE equ 20
stack_bottom ds STACK_SIZE, 0
stack_top db 0  

	include 'retrotools\tools.asm'
	include 'constants.asm'
	include 'game.asm'
	; include 'sprites.asm'
	include 'player.asm'
	include 'npc.asm'
	include 'dialog.asm'
	include 'retrotools\keycacher.asm'
	include 'retrotools\spritetools.asm'
	include 'tiledworld.asm'
	
	; MMU 7 n,0x20*2 
	; org 0xE000
	; incbin "space.bmp",1078

	; MMU 7 n,0x23*2 
	; org 0xE000
	; incbin "space2.bmp",1078


	; MMU 7 n,0x20
	; org 0xE000
	; incbin "fonts/font7.spr"



	
	; Sprite Attribute 0
;     X X X X X X X X

; Sprite Attribute 1
;     Y Y Y Y Y Y Y Y

; Sprite Attribute 2
;     P P P P XM YM R X8/PR

; Sprite Attribute 3
;     V E N5 N4 N3 N2 N1 N0 (NNNNN=Pattern ID)

; Sprite Attribute 4
; A. Extended Anchor Sprite
;     H N6 T X X Y Y Y8
; B. Relative Sprite, Composite Type
;     0 1 N6 X X Y Y PO
; C. Relative Sprite, Unified Type
;     0 1 N6 0 0 0 0 PO


	slot 7
	page 0xe
	org MAP_ADDRESS
; SPRITE_COUNT equ 64
; rpgsprites1:
	db  $E3, $E3, $E3, $E3, $E3, $E3, $00, $00, $00, $00, $E3, $E3, $E3, $E3, $E3, $E3;
	db  $E3, $E3, $E3, $E3, $E3, $00, $00, $00, $00, $00, $00, $E3, $E3, $E3, $E3, $E3;
	db  $E3, $E3, $E3, $E3, $00, $00, $00, $00, $00, $00, $00, $00, $E3, $E3, $E3, $E3;
	db  $E3, $E3, $E3, $E3, $00, $00, $00, $FA, $FA, $00, $00, $00, $E3, $E3, $E3, $E3;
	db  $E3, $E3, $E3, $00, $00, $00, $00, $FA, $FA, $00, $00, $00, $00, $E3, $E3, $E3;
	db  $E3, $E3, $00, $EE, $00, $FA, $00, $FA, $FA, $00, $FA, $00, $00, $E3, $E3, $E3;
	db  $E3, $00, $EE, $EE, $00, $00, $FA, $FA, $FA, $FA, $00, $00, $00, $00, $E3, $E3;
	db  $E3, $00, $00, $00, $00, $EE, $00, $00, $00, $00, $EE, $EE, $EE, $00, $E3, $E3;
	db  $E3, $00, $00, $FA, $00, $EE, $EE, $00, $00, $EE, $00, $EE, $00, $FA, $00, $E3;
	db  $E3, $E3, $00, $00, $00, $00, $EE, $EE, $EE, $EE, $00, $00, $00, $FA, $00, $E3;
	db  $E3, $E3, $E3, $E3, $00, $EE, $00, $00, $00, $00, $00, $FA, $FA, $00, $E3, $E3;
	db  $E3, $E3, $E3, $E3, $00, $00, $EE, $EE, $00, $EE, $00, $FA, $FA, $00, $E3, $E3;
	db  $E3, $E3, $E3, $E3, $E3, $00, $00, $00, $00, $00, $00, $00, $00, $E3, $E3, $E3;
	db  $E3, $E3, $E3, $E3, $E3, $E3, $00, $00, $00, $00, $00, $E3, $E3, $E3, $E3, $E3;
	db  $E3, $E3, $E3, $E3, $00, $00, $EE, $EE, $00, $00, $00, $00, $E3, $E3, $E3, $E3;
	db  $E3, $E3, $E3, $E3, $00, $00, $00, $00, $00, $00, $00, $00, $E3, $E3, $E3, $E3;



; rpgsprites2:
	db  $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C;
	db  $2C, $78, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $78, $2C;
	db  $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $78, $2C, $2C, $2C, $2C, $2C, $2C;
	db  $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C;
	db  $2C, $2C, $2C, $2C, $78, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C;
	db  $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $78, $2C, $2C, $2C, $2C, $78, $2C, $2C;
	db  $2C, $2C, $78, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C;
	db  $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C;
	db  $2C, $2C, $2C, $2C, $78, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $78, $2C, $2C;
	db  $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $78, $2C, $2C, $2C, $2C, $2C;
	db  $2C, $78, $2C, $2C, $2C, $2C, $2C, $78, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C;
	db  $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C;
	db  $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $78, $2C, $2C, $2C;
	db  $2C, $2C, $2C, $2C, $2C, $2C, $78, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C;
	db  $2C, $78, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $78, $2C, $2C, $2C, $2C, $2C;
	db  $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C;



; rpgsprites3:
	db  $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C;
	db  $2C, $28, $04, $2C, $28, $50, $50, $2C, $2C, $28, $50, $50, $50, $28, $28, $2C;
	db  $2C, $28, $28, $28, $28, $28, $50, $28, $28, $28, $28, $E0, $28, $28, $04, $2C;
	db  $2C, $28, $28, $28, $28, $28, $28, $28, $28, $28, $28, $28, $28, $04, $2C, $2C;
	db  $2C, $28, $28, $E0, $28, $28, $28, $28, $28, $28, $54, $54, $28, $2C, $2C, $2C;
	db  $28, $28, $50, $28, $54, $28, $04, $04, $28, $28, $28, $54, $28, $50, $50, $2C;
	db  $04, $50, $50, $28, $54, $28, $04, $04, $28, $28, $28, $54, $54, $28, $50, $2C;
	db  $04, $50, $28, $28, $28, $28, $04, $2C, $64, $28, $28, $28, $28, $64, $64, $2C;
	db  $2C, $28, $28, $28, $28, $04, $04, $64, $64, $28, $50, $50, $28, $28, $64, $2C;
	db  $2C, $28, $28, $E0, $28, $04, $2C, $64, $28, $28, $28, $50, $50, $28, $64, $2C;
	db  $2C, $04, $04, $28, $04, $04, $64, $28, $28, $28, $28, $28, $50, $28, $2C, $2C;
	db  $2C, $2C, $04, $04, $04, $64, $64, $28, $28, $28, $28, $E0, $28, $04, $2C, $2C;
	db  $2C, $2C, $2C, $2C, $2C, $64, $28, $28, $E0, $28, $28, $28, $04, $04, $2C, $2C;
	db  $2C, $28, $28, $04, $2C, $2C, $28, $28, $28, $28, $04, $04, $04, $2C, $2C, $2C;
	db  $2C, $28, $04, $04, $2C, $2C, $04, $04, $04, $04, $04, $2C, $2C, $2C, $2C, $2C;
	db  $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C, $2C;



; rpgsprites4:
	db  $88, $44, $64, $64, $64, $64, $64, $64, $88, $44, $64, $64, $64, $64, $64, $64;
	db  $88, $44, $64, $64, $64, $64, $64, $64, $88, $44, $64, $64, $64, $64, $64, $64;
	db  $88, $44, $44, $44, $44, $44, $44, $44, $88, $44, $44, $44, $44, $44, $44, $44;
	db  $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88;
	db  $64, $64, $64, $64, $88, $44, $64, $64, $64, $64, $64, $64, $88, $44, $64, $64;
	db  $64, $64, $64, $64, $88, $44, $64, $64, $64, $64, $64, $64, $88, $44, $64, $64;
	db  $44, $44, $44, $44, $88, $44, $44, $44, $44, $44, $44, $44, $88, $44, $44, $44;
	db  $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88;
	db  $88, $44, $64, $64, $64, $64, $64, $64, $88, $44, $64, $64, $64, $64, $64, $64;
	db  $88, $44, $64, $64, $64, $64, $64, $64, $88, $44, $64, $64, $64, $64, $64, $64;
	db  $88, $44, $44, $44, $44, $44, $44, $44, $88, $44, $44, $44, $44, $44, $44, $44;
	db  $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88;
	db  $64, $64, $64, $64, $88, $44, $64, $64, $64, $64, $64, $64, $88, $44, $64, $64;
	db  $64, $64, $64, $64, $88, $44, $64, $64, $64, $64, $64, $64, $88, $44, $64, $64;
	db  $44, $44, $44, $44, $88, $44, $44, $44, $44, $44, $44, $44, $88, $44, $44, $44;
	db  $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88, $88;



; rpgsprites5:
	db  $F0, $F0, $F0, $F5, $F0, $F0, $F0, $F5, $F0, $F0, $F0, $F5, $F0, $F0, $F0, $F5;
	db  $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5;
	db  $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5;
	db  $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5;
	db  $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5;
	db  $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5;
	db  $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5;
	db  $F0, $F5, $F0, $F0, $F0, $F5, $F0, $F0, $F0, $F5, $F0, $F0, $F0, $F5, $F0, $F0;
	db  $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5;
	db  $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5;
	db  $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5;
	db  $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5;
	db  $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5;
	db  $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5;
	db  $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5, $F0, $F5;
	db  $F0, $F0, $F0, $F5, $F0, $F0, $F0, $F5, $F0, $F0, $F0, $F5, $F0, $F0, $F0, $F5;



; rpgsprites6:
	db  $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3;
	db  $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3;
	db  $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3;
	db  $E3, $E3, $E3, $E3, $E3, $E3, $E3, $01, $01, $E3, $E3, $E3, $E3, $E3, $E3, $E3;
	db  $E3, $E3, $E3, $E3, $E3, $E3, $01, $FF, $FF, $01, $E3, $E3, $E3, $E3, $E3, $E3;
	db  $E3, $E3, $E3, $E3, $E3, $01, $FF, $DA, $DA, $FF, $01, $E3, $E3, $E3, $E3, $E3;
	db  $E3, $E3, $E3, $E3, $01, $FF, $DA, $16, $16, $DA, $DA, $01, $E3, $E3, $E3, $E3;
	db  $E3, $E3, $E3, $01, $FF, $DA, $16, $0F, $02, $16, $DA, $DA, $01, $E3, $E3, $E3;
	db  $E3, $E3, $01, $FF, $DA, $16, $E3, $0F, $02, $01, $16, $DA, $DA, $01, $E3, $E3;
	db  $01, $01, $FF, $DA, $16, $E3, $E3, $0F, $02, $01, $E3, $16, $DA, $DA, $01, $01;
	db  $DA, $DA, $DA, $16, $01, $E3, $E3, $0F, $02, $01, $E3, $E3, $16, $DA, $DA, $DA;
	db  $16, $16, $16, $02, $01, $E3, $E3, $0F, $02, $01, $E3, $E3, $0F, $16, $16, $16;
	db  $E3, $E3, $0F, $02, $01, $E3, $E3, $0F, $02, $01, $E3, $E3, $0F, $02, $01, $E3;
	db  $E3, $E3, $0F, $02, $01, $E3, $E3, $0F, $02, $01, $E3, $E3, $0F, $02, $01, $E3;
	db  $E3, $E3, $0F, $02, $01, $E3, $E3, $0F, $02, $01, $E3, $E3, $0F, $02, $01, $E3;
	db  $E3, $E3, $0F, $02, $01, $E3, $E3, $0F, $02, $01, $E3, $E3, $0F, $02, $01, $E3;



; rpgsprites7:
	db  $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3;
	db  $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3;
	db  $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3;
	db  $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3;
	db  $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3;
	db  $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3;
	db  $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3;
	db  $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3;
	db  $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3, $E3;
	db  $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01;
	db  $DA, $DA, $DA, $DA, $DA, $DA, $DA, $DA, $DA, $DA, $DA, $DA, $DA, $DA, $DA, $DA;
	db  $16, $16, $16, $16, $16, $16, $16, $16, $16, $16, $16, $16, $16, $16, $16, $16;
	db  $E3, $E3, $0F, $02, $01, $E3, $E3, $0F, $02, $01, $E3, $E3, $0F, $02, $01, $E3;
	db  $E3, $E3, $0F, $02, $01, $E3, $E3, $0F, $02, $01, $E3, $E3, $0F, $02, $01, $E3;
	db  $E3, $E3, $0F, $02, $01, $E3, $E3, $0F, $02, $01, $E3, $E3, $0F, $02, $01, $E3;
	db  $E3, $E3, $0F, $02, $01, $E3, $E3, $0F, $02, $01, $E3, $E3, $0F, $02, $01, $E3;



; rpgsprites8:
	db  $02, $02, $02, $03, $02, $02, $02, $02, $02, $02, $16, $02, $02, $02, $02, $02;
	db  $02, $17, $02, $12, $12, $02, $02, $02, $02, $02, $02, $02, $16, $1F, $16, $16;
	db  $02, $02, $12, $12, $02, $02, $02, $02, $17, $1F, $02, $02, $02, $17, $02, $16;
	db  $16, $1F, $02, $02, $02, $02, $02, $12, $12, $12, $12, $02, $02, $02, $12, $12;
	db  $02, $02, $02, $02, $02, $02, $12, $12, $12, $12, $12, $12, $12, $02, $02, $02;
	db  $1F, $12, $12, $12, $12, $16, $12, $12, $1F, $1F, $1F, $12, $12, $12, $12, $16;
	db  $16, $1F, $1F, $16, $16, $16, $02, $02, $1F, $1F, $1F, $1A, $1A, $1A, $02, $16;
	db  $1F, $1F, $02, $02, $02, $02, $02, $02, $02, $12, $02, $02, $16, $02, $02, $16;
	db  $1F, $02, $02, $02, $02, $02, $02, $12, $12, $02, $02, $02, $12, $02, $02, $1F;
	db  $02, $02, $02, $02, $02, $12, $02, $02, $02, $02, $02, $02, $02, $02, $1F, $1F;
	db  $12, $16, $12, $12, $12, $12, $1F, $12, $12, $12, $02, $02, $02, $02, $02, $02;
	db  $12, $02, $16, $12, $12, $02, $12, $12, $12, $12, $12, $12, $12, $12, $12, $1F;
	db  $12, $12, $12, $1F, $02, $02, $02, $02, $12, $12, $12, $1F, $12, $12, $12, $12;
	db  $1F, $1F, $1F, $02, $02, $02, $02, $02, $02, $02, $02, $02, $12, $12, $12, $12;
	db  $02, $02, $02, $02, $02, $02, $16, $1F, $16, $02, $1F, $02, $02, $02, $02, $02;
	db  $02, $17, $02, $16, $02, $16, $02, $16, $02, $02, $17, $02, $02, $1F, $02, $02;



; rpgsprites9:
	db  $01, $01, $01, $03, $01, $01, $01, $01, $01, $01, $16, $01, $01, $01, $01, $01;
	db  $01, $17, $01, $09, $09, $01, $01, $01, $01, $01, $01, $01, $16, $1F, $09, $09;
	db  $01, $01, $09, $09, $01, $01, $01, $01, $17, $1F, $01, $01, $01, $17, $02, $09;
	db  $09, $1F, $01, $01, $01, $01, $01, $09, $09, $09, $09, $01, $01, $01, $09, $09;
	db  $01, $01, $01, $01, $01, $01, $09, $09, $09, $09, $09, $09, $09, $01, $01, $01;
	db  $1F, $09, $09, $09, $09, $16, $09, $09, $1F, $1F, $1F, $09, $09, $09, $09, $16;
	db  $09, $1F, $1F, $16, $16, $16, $01, $01, $1F, $1F, $1F, $1A, $1A, $1A, $01, $16;
	db  $1F, $1F, $01, $01, $01, $01, $01, $01, $01, $12, $01, $01, $16, $01, $01, $16;
	db  $1F, $01, $01, $01, $01, $01, $01, $12, $12, $01, $01, $01, $12, $01, $01, $1F;
	db  $01, $01, $01, $01, $01, $09, $01, $01, $01, $01, $01, $01, $01, $01, $1F, $1F;
	db  $09, $16, $09, $09, $09, $09, $1F, $09, $09, $09, $01, $01, $01, $01, $01, $01;
	db  $09, $02, $16, $09, $09, $01, $09, $09, $09, $09, $09, $09, $09, $09, $09, $1F;
	db  $09, $09, $09, $1F, $01, $01, $01, $01, $09, $09, $09, $1F, $09, $09, $09, $09;
	db  $1F, $1F, $1F, $01, $01, $01, $01, $01, $01, $01, $01, $01, $09, $09, $09, $09;
	db  $01, $01, $01, $01, $01, $01, $16, $1F, $16, $01, $1F, $01, $01, $01, $01, $01;
	db  $01, $17, $01, $16, $01, $16, $02, $16, $01, $01, $17, $01, $01, $1F, $01, $01;



; rpgsprites10:
	db  $00, $49, $49, $49, $49, $00, $49, $49, $49, $49, $49, $49, $49, $00, $00, $00;
	db  $00, $49, $49, $49, $00, $00, $00, $49, $49, $49, $49, $49, $00, $00, $49, $49;
	db  $00, $00, $00, $00, $00, $49, $49, $00, $49, $00, $00, $00, $00, $49, $49, $49;
	db  $00, $00, $49, $49, $49, $49, $49, $00, $00, $49, $49, $49, $00, $49, $49, $49;
	db  $00, $49, $49, $49, $49, $49, $49, $00, $49, $49, $49, $49, $00, $49, $49, $49;
	db  $00, $49, $49, $49, $49, $49, $49, $00, $49, $49, $49, $49, $00, $49, $49, $49;
	db  $00, $49, $49, $49, $49, $49, $00, $00, $49, $49, $49, $49, $00, $49, $49, $49;
	db  $00, $00, $49, $49, $00, $00, $00, $00, $49, $49, $49, $49, $00, $49, $49, $49;
	db  $00, $00, $00, $00, $49, $49, $49, $49, $00, $49, $00, $00, $00, $00, $00, $00;
	db  $00, $00, $49, $49, $49, $49, $49, $49, $00, $00, $00, $49, $49, $49, $49, $00;
	db  $00, $49, $49, $49, $49, $49, $49, $49, $49, $00, $49, $49, $49, $49, $49, $49;
	db  $00, $49, $49, $49, $49, $49, $49, $49, $49, $00, $49, $49, $49, $49, $49, $49;
	db  $00, $49, $49, $49, $49, $49, $49, $49, $00, $49, $49, $49, $49, $49, $49, $49;
	db  $00, $00, $49, $49, $49, $49, $49, $00, $49, $00, $00, $00, $49, $49, $49, $49;
	db  $00, $00, $00, $00, $00, $00, $00, $49, $49, $49, $49, $49, $00, $49, $49, $00;
	db  $00, $49, $49, $49, $49, $00, $49, $49, $49, $49, $49, $49, $49, $00, $00, $49;



; rpgsprites11:
	db  $00, $49, $49, $49, $49, $00, $49, $49, $49, $49, $49, $49, $49, $00, $00, $00;
	db  $00, $49, $49, $49, $00, $00, $00, $49, $49, $49, $49, $49, $00, $00, $49, $00;
	db  $00, $00, $00, $00, $00, $49, $49, $00, $49, $00, $00, $00, $00, $49, $49, $00;
	db  $00, $00, $49, $49, $49, $49, $49, $00, $00, $49, $49, $49, $00, $49, $49, $00;
	db  $00, $49, $49, $49, $49, $49, $49, $00, $49, $49, $49, $49, $00, $49, $49, $00;
	db  $00, $49, $49, $49, $49, $49, $49, $00, $49, $49, $49, $49, $00, $49, $49, $00;
	db  $00, $49, $49, $49, $49, $49, $00, $00, $49, $49, $49, $49, $00, $49, $49, $00;
	db  $00, $00, $49, $49, $00, $00, $00, $00, $49, $49, $49, $49, $00, $49, $49, $00;
	db  $00, $00, $00, $00, $49, $49, $49, $49, $00, $49, $00, $00, $00, $00, $00, $00;
	db  $00, $00, $49, $49, $49, $49, $49, $49, $00, $00, $00, $49, $49, $49, $49, $00;
	db  $00, $49, $49, $49, $49, $49, $49, $49, $49, $00, $49, $49, $49, $49, $49, $00;
	db  $00, $49, $49, $49, $49, $49, $49, $49, $49, $00, $49, $49, $49, $49, $49, $00;
	db  $00, $49, $49, $49, $49, $49, $49, $49, $00, $49, $49, $49, $49, $49, $49, $00;
	db  $00, $00, $49, $49, $49, $49, $49, $00, $49, $00, $00, $00, $49, $49, $49, $00;
	db  $00, $00, $00, $00, $00, $00, $00, $49, $49, $49, $49, $49, $00, $49, $49, $00;
	db  $00, $49, $49, $49, $49, $00, $49, $49, $49, $49, $49, $49, $49, $00, $00, $00;



; rpgsprites12:
	db  $49, $49, $49, $49, $49, $49, $49, $49, $49, $49, $49, $49, $49, $49, $49, $49;
	db  $49, $49, $80, $80, $80, $80, $49, $49, $49, $49, $80, $80, $80, $80, $49, $49;
	db  $49, $80, $80, $80, $80, $80, $80, $49, $49, $80, $80, $80, $80, $80, $80, $49;
	db  $49, $80, $80, $80, $80, $80, $80, $49, $49, $80, $80, $80, $80, $80, $80, $49;
	db  $49, $80, $80, $80, $80, $80, $80, $49, $49, $80, $80, $80, $80, $80, $80, $49;
	db  $49, $80, $80, $80, $80, $80, $80, $49, $49, $80, $80, $80, $80, $80, $80, $49;
	db  $49, $80, $80, $80, $80, $80, $80, $49, $49, $80, $80, $80, $80, $80, $80, $49;
	db  $49, $80, $80, $80, $80, $80, $80, $49, $49, $80, $80, $80, $80, $80, $80, $49;
	db  $49, $80, $80, $80, $80, $80, $80, $49, $49, $80, $80, $80, $80, $80, $80, $49;
	db  $49, $80, $80, $80, $80, $80, $80, $49, $49, $80, $80, $80, $80, $80, $80, $49;
	db  $49, $80, $80, $80, $80, $80, $80, $49, $49, $80, $80, $80, $80, $80, $80, $49;
	db  $49, $80, $80, $80, $80, $80, $80, $49, $49, $80, $80, $80, $80, $80, $80, $49;
	db  $49, $80, $80, $80, $80, $80, $80, $49, $49, $80, $80, $80, $80, $80, $80, $49;
	db  $49, $80, $80, $80, $80, $80, $80, $49, $49, $80, $80, $80, $80, $80, $80, $49;
	db  $49, $49, $80, $80, $80, $80, $49, $49, $49, $49, $80, $80, $80, $80, $49, $49;
	db  $49, $49, $49, $49, $49, $49, $49, $49, $49, $49, $49, $49, $49, $49, $49, $49;



; rpgsprites13:
	db  $E3, $E3, $E3, $E3, $E3, $E3, $03, $03, $03, $03, $E3, $E3, $E3, $E3, $E3, $E3;
	db  $E3, $E3, $E3, $E3, $E3, $03, $03, $03, $03, $03, $03, $E3, $E3, $E3, $E3, $E3;
	db  $E3, $E3, $E3, $E3, $03, $03, $03, $03, $03, $03, $03, $03, $E3, $E3, $E3, $E3;
	db  $E3, $E3, $E3, $E3, $03, $03, $03, $FA, $FA, $03, $03, $03, $E3, $E3, $E3, $E3;
	db  $E3, $E3, $E3, $00, $03, $03, $03, $FA, $FA, $03, $03, $03, $03, $E3, $E3, $E3;
	db  $E3, $E3, $00, $FC, $03, $FA, $03, $FA, $FA, $03, $FA, $03, $03, $E3, $E3, $E3;
	db  $E3, $00, $FC, $FC, $03, $03, $FA, $FA, $FA, $FA, $03, $03, $03, $00, $E3, $E3;
	db  $E3, $00, $00, $00, $00, $FC, $00, $00, $00, $00, $FC, $FC, $FC, $00, $E3, $E3;
	db  $E3, $00, $00, $FA, $00, $FC, $FC, $00, $00, $FC, $00, $FC, $00, $FA, $00, $E3;
	db  $E3, $E3, $00, $00, $00, $00, $FC, $FC, $FC, $FC, $00, $00, $00, $FA, $00, $E3;
	db  $E3, $E3, $E3, $E3, $00, $FC, $00, $00, $00, $00, $00, $FA, $FA, $00, $E3, $E3;
	db  $E3, $E3, $E3, $E3, $00, $00, $FC, $FC, $00, $FC, $00, $FA, $FA, $00, $E3, $E3;
	db  $E3, $E3, $E3, $E3, $E3, $00, $00, $00, $00, $00, $00, $00, $00, $E3, $E3, $E3;
	db  $E3, $E3, $E3, $E3, $E3, $E3, $00, $00, $00, $00, $00, $E3, $E3, $E3, $E3, $E3;
	db  $E3, $E3, $E3, $E3, $00, $00, $EE, $EE, $00, $00, $00, $00, $E3, $E3, $E3, $E3;
	db  $E3, $E3, $E3, $E3, $00, $00, $00, $00, $00, $00, $00, $00, $E3, $E3, $E3, $E3;





tilepalette:
	incbin "tiles/3bit.pal",0


	slot 6
	page $f
	org MAP_ADDRESS
	;0=grass 1,4=bush  5,8=dark water 9,12=water 13 =door l 17=door r
tilemap:
	db 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	db 0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
	db 0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0
	db 0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0
	db 0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0
	db 0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0
	db 0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0
	db 0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0
	db 0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0
	db 0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,13,17,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0
	db 0,0,0,0,12,12,12,12,12,12,12,12,12,12,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0

	page $10
	org MAP_ADDRESS
tilebitmap:	
	incbin "tiles/3bit.til",0

	SAVENEX OPEN "main.nex", start , stack_top
    SAVENEX CORE 3, 0, 0      
    SAVENEX CFG 0, 0            
	SAVENEX AUTO
    SAVENEX CLOSE 

;main.asm(97): error: Write outside of device memory at: 65536


;MMU notes (sjasm)
; MMU <first slot number> [<last slot number>|<single slot option>], <page number>[,<address>]

;     Maps memory page(s) to slot(s), similar to SLOT + PAGE combination, but allows to set up whole range of consecutive slots (with consecutive memory pages). Or when only single slot is specified, extra option can be used to extend particular slot functionality. The slot behaviour will stay set in the current DEVICE until reset by another MMU specifying same slot (even as part of range, that will clear the option to "default").

;     The optional third argument is address for ORG functionality.

;     Single slot option (default state is: no error/warning and no wrap = nothing special):

;     e = error on writing beyond last byte of slot
;     w = warning on writing beyond last byte of slot
;     n = wrap address back to start of slot, map next page

;     Example 5.34. docs_examples/po_mmu.asm

;         DEVICE ZXSPECTRUM128 : LABELSLIST "po_mmu.lbl"  ; to check label pages
;         MMU 1 3, 5      ; maps slots 1, 2, 3 with pages 5, 6, 7
;         ORG 0xBFFF
;     label1_p6: scf      ; last byte of page 6 (in slot 2)
;     label2_p7: scf      ; first byte of page 7 (in slot 3)

;         MMU 3 e, 0      ; page 0 into slot 3, write beyond slot will cause error
;         ORG 0xFFFF
;         ld  a,1         ; error: Write outside of memory slot: 65536 (65536 = address outside)

;         MMU 3 n, 1      ; page 1 into slot 3, make it wrap + map next page automatically
;         ORG 0xFFFF      ; ! also the $ address was truncated by MMU from $10001 to $0001 !
;     label3_p1: scf      ; last byte of page 1, then wrapping back to 0xC000 with page 2
;     label4_p2: scf      ; first byte of page 2 at 0xC000



